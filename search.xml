<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>verilog仿真</title>
      <link href="/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/"/>
      <url>/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/</url>
      
        <content type="html"><![CDATA[<p>关于昨天提到的仿真全过程分析以及总结</p><a id="more"></a><p>看视频忒复杂了，果然我连仿真都还不会直接上实体有个屁用<br>下面我们开始吧</p><hr><p>modelsim需要两个文件，就拿最简单的程序led流水灯举例，有led_test.v和led_test_tb.v，其中tb那个好像叫做testbench，要想仿真需要将这两个文件都添加到modelsim的工程中。</p><h2 id="激励文件-tb-v的写法"><a href="#激励文件-tb-v的写法" class="headerlink" title="激励文件 .tb.v的写法"></a>激励文件 .tb.v的写法</h2><p>testbench是一种激励文件，由于软件不知道我们的时钟信号，因此需要我们自己设计，自己写，用于模拟现实中的时钟信号。</p><h3 id="简单的led实验的激励文件和程序文件的写法"><a href="#简单的led实验的激励文件和程序文件的写法" class="headerlink" title="简单的led实验的激励文件和程序文件的写法"></a>简单的led实验的激励文件和程序文件的写法</h3><h4 id="激励文件"><a href="#激励文件" class="headerlink" title="激励文件"></a>激励文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns&#x2F;1ns  &#x2F;&#x2F;时间单位&#x2F;时间精度</span><br><span class="line">module led_test_tb;  &#x2F;&#x2F;定义激励文件名称</span><br><span class="line">reg clk;            </span><br><span class="line">reg rst_n;</span><br><span class="line">wire[3:0] led;</span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">clk &#x3D; 1&#39;b0;</span><br><span class="line">rst_n &#x3D; 1&#39;b0;</span><br><span class="line">#100 rst_n &#x3D; 1&#39;b1;&#x2F;&#x2F;&quot;#100&quot;是延时100单位的意思，这里就是rst_n信号延时</span><br><span class="line">    &#x2F;&#x2F;100ns后变1</span><br><span class="line">end</span><br><span class="line">always#10 clk &#x3D; ~clk;&#x2F;&#x2F;50Mhz  &#x2F;&#x2F;每过10ns产生一次时钟信号跳变</span><br><span class="line">led_test dut</span><br><span class="line">(</span><br><span class="line">.clk           (clk),&#x2F;&#x2F; 开发板上输入时钟: 50Mhz</span><br><span class="line">.rst_n         (rst_n),&#x2F;&#x2F; 开发板上输入复位按键</span><br><span class="line">.led           (led)&#x2F;&#x2F; 输出LED灯,用于控制开发板上四个LED(LED0~LED3)</span><br><span class="line">);</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>仿真后的结果波形如下</p><img src="/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/1.png" class title="波形图">  <p>可以看到，在100ns时rst_n如程序所写上升了，这个程序主要用于产生时钟信号，用于下面的主程序代码</p><h4 id="程序文件-v的代码"><a href="#程序文件-v的代码" class="headerlink" title="程序文件 .v的代码"></a>程序文件 .v的代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns &#x2F; 1ps</span><br><span class="line">module led_test</span><br><span class="line">(</span><br><span class="line">input           clk,           &#x2F;&#x2F; system clock 50Mhz on board</span><br><span class="line">input           rst_n,         &#x2F;&#x2F; reset ,low active</span><br><span class="line">output reg[3:0] led            &#x2F;&#x2F; LED,use for control the LED signal on board</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;define the time counter</span><br><span class="line">reg [31:0]      timer;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; cycle counter:from 0 to 4 sec</span><br><span class="line">always@(posedge clk or negedge rst_n)</span><br><span class="line">begin</span><br><span class="line">if (rst_n &#x3D;&#x3D; 1&#39;b0)</span><br><span class="line">timer &lt;&#x3D; 32&#39;d0;                     &#x2F;&#x2F;when the reset signal valid,time counter clearing</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d199_999_999)      &#x2F;&#x2F;4 seconds count(50M*4-1&#x3D;199999999)</span><br><span class="line">timer &lt;&#x3D; 32&#39;d0;                     &#x2F;&#x2F;count done,clearing the time counter</span><br><span class="line">else</span><br><span class="line">timer &lt;&#x3D; timer + 32&#39;d1;             &#x2F;&#x2F;timer counter &#x3D; timer counter + 1</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; LED control</span><br><span class="line">always@(posedge clk or negedge rst_n)</span><br><span class="line">begin</span><br><span class="line">if (rst_n &#x3D;&#x3D; 1&#39;b0)</span><br><span class="line">led &lt;&#x3D; 4&#39;b0000;                     &#x2F;&#x2F;when the reset signal active</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d49_999_999)       &#x2F;&#x2F;time counter count to 1st sec,LED1 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0001;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d99_999_999)       &#x2F;&#x2F;time counter count to 2nd sec,LED2 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0010;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d149_999_999)      &#x2F;&#x2F;time counter count to 3rd sec,LED3 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0100;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d199_999_999)      &#x2F;&#x2F;time counter count to 4th sec,LED4 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b1000;</span><br><span class="line">end</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>下面是该工程的总体仿真，可以看出在时钟上升沿处，计数器加一，正常运行</p><img src="/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/2.png" class title="波形图2">  <h2 id="testbench中的常用写法"><a href="#testbench中的常用写法" class="headerlink" title="testbench中的常用写法"></a>testbench中的常用写法</h2><p>下述所有指令必须在initial内写，不能在此之外的地方或者always里面。然后initial在程序中是由上到下，并行执行的。也就是说两个initial，是先执行上面的第一条然后再执行下面的第一条，然后再执行上面的第二条</p><h3 id="display-可自动换行"><a href="#display-可自动换行" class="headerlink" title="display(可自动换行)"></a>display(可自动换行)</h3><p>‘’’<br>$display(“hello alinx”);<br>$display(“rst_n=%b”, rst_n);<br>‘’’</p><h3 id="write-无法自动换行"><a href="#write-无法自动换行" class="headerlink" title="write (无法自动换行)"></a>write (无法自动换行)</h3><p>与display差不多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$write(&quot;hello alinx\n&quot;);&#x2F;&#x2F;这样才可以换行</span><br><span class="line">$write(&quot;rst_n&#x3D;%b&quot;, rst_n);</span><br></pre></td></tr></table></figure><h3 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h3><p>用于持续监测指定变量，只要变量发生变化，即会触发$monitor，显示对应语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$monitor(&quot;clk &#x3D; %b&quot;, clk);</span><br></pre></td></tr></table></figure><h3 id="strobe"><a href="#strobe" class="headerlink" title="strobe"></a>strobe</h3><p>任务与display相同，用法也相同。但是是在所有变量都有值后才打印出来而display仿真器一看到这个命令，不管要显示的变量是否有值，都会显示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$strobe(&quot;rst_n&#x3D;%b&quot;, rst_n);</span><br></pre></td></tr></table></figure><h3 id="stop"><a href="#stop" class="headerlink" title="stop"></a>stop</h3><p>stop是暂停仿真，下一步由仿真者决定</p><h3 id="finish"><a href="#finish" class="headerlink" title="finish"></a>finish</h3><p>执行到finish直接停止仿真，关闭软件</p><p>今天就这么多吧，，忒难受了，一聊停不下来</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>屁屁枪忒骚了</title>
      <link href="/blog/2020/02/24/%E5%B1%81%E5%B1%81%E6%9E%AA%E5%BF%92%E9%AA%9A%E4%BA%86/"/>
      <url>/blog/2020/02/24/%E5%B1%81%E5%B1%81%E6%9E%AA%E5%BF%92%E9%AA%9A%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>wdnm<br>仿真忒骚了，今天太晚了，明天把led和移位寄存器仿真及波形解读补上。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我抽到伊莉雅一家人了！！</title>
      <link href="/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/"/>
      <url>/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>没什么好说的了，明天正式开课，今天把主题换成了volantis</p><a id="more"></a><p>git bash设置代理的方法，不设置代理f出去下载不走那条线，，，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &quot;http:&#x2F;&#x2F;127.0.0.1:1080&quot;</span><br><span class="line">git config --global https.proxy &quot;https:&#x2F;&#x2F;127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>后面改成自己电脑的代理端口即可</p><img src="/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/A.jpg" class title="A"><p>大佬入门时看的书</p><img src="/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/B.png" class title="B">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>伊莉雅卡哇伊</title>
      <link href="/blog/2020/02/21/%E4%BC%8A%E8%8E%89%E9%9B%85%E5%8D%A1%E5%93%87%E4%BC%8A/"/>
      <url>/blog/2020/02/21/%E4%BC%8A%E8%8E%89%E9%9B%85%E5%8D%A1%E5%93%87%E4%BC%8A/</url>
      
        <content type="html"><![CDATA[<p>今天六级出成绩，，454，，不高的分数，但是和预估相比能看出些东西。</p><a id="more"></a><p>听力比预估高了三十分，说明听力普遍较差，我的排名还算前，所以我得到了提分</p><p>阅读比预估少了几分，不排除估分错误，但是不像听力那样，说明我的阅读分数没有太多的加权，加权只在低分段有比较大的用处</p><p>就等着明天微电子所出分看那些学长的表现了，23号我将初步认定其中一所学校</p><p>微电子所，微电子学院，西电电院</p><p>不得不说material-x是真的棒，i了i了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>born</title>
      <link href="/blog/2020/02/20/born/"/>
      <url>/blog/2020/02/20/born/</url>
      
        <content type="html"><![CDATA[<p>很难受，今天的deadline没有完成任务，知识点是学完了三节作业的量，但是却只是刚好吸收完，就得开始英语了，虽然我昨天就知道完成是不可能的。下一个deadline是2.23，我得加快fpga的学习进度</p><a id="more"></a><p>今天听了西电研究生复试说明，真的是全程身体发抖，我为什么会这么紧张，又不是我考，最近这次六级也是这样发抖，，，很迷，感觉是因为自己花费了大量的时间，但是却觉得自己还没有准备充足的原因吧，can i say “ready perfectly” in the future before entering the examination room。然后整理的文档在zhuomian内。</p><p>我必须将我所做的所有事情复盘，整理到我的个人网站中，这将对我未来的复试有着重要的作用，同时也会让我回顾这三年来，我到底做了什么。让导师知道我的经历（如果愿意看的话）</p><p>今天就这么多了，明天的数学必须完成一半，不然来不及的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>今日依然是伊莉雅日呢</title>
      <link href="/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/"/>
      <url>/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="今日吐槽"><a href="#今日吐槽" class="headerlink" title="今日吐槽"></a>今日吐槽</h1><p>emmm，，突然发现搜索功能不正常，看看是怎么回事，，</p><p>在线图床还是不靠谱，直接把图片存在本地算了，</p><p>不行，还是换回material-x吧，，bluelake不得行</p><a id="more"></a><h1 id="本地存图片"><a href="#本地存图片" class="headerlink" title="本地存图片"></a>本地存图片</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>这个插件名字是hexo-asset-image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>但是这个插件需要修改，不然会出bug</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link &#x3D; data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">&#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">   !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">  &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">  $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开_config.yml文件，修改下述内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><h2 id="正确引用姿势"><a href="#正确引用姿势" class="headerlink" title="正确引用姿势"></a>正确引用姿势</h2><p>其中example.jpg是你想引用的文件，放在生成的博客文件夹内，This is an example image是图片注解，鼠标移上去会显示</p><h1 id="今日图片"><a href="#今日图片" class="headerlink" title="今日图片"></a>今日图片</h1><img src="/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/xiaohei.jpg" class title="xiaohei">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>克洛伊卡哇伊</title>
      <link href="/blog/2020/02/18/%E5%85%8B%E6%B4%9B%E4%BC%8A%E5%8D%A1%E5%93%87%E4%BC%8A/"/>
      <url>/blog/2020/02/18/%E5%85%8B%E6%B4%9B%E4%BC%8A%E5%8D%A1%E5%93%87%E4%BC%8A/</url>
      
        <content type="html"><![CDATA[<p>今天母亲生日呢，我想做鱼香茄子，我可以做到吗？</p><a id="more"></a><p>10点开始了，上午必须把数学的东西做完，然后开始积分的复习</p><p>中午必须把英语刷完</p><p>下午三点去乐购看看能不能买到视频里面提到的东西（先去菜市场）</p><p>so sad </p><p>现在是22.23，没有给母亲做道独特的菜，就说了句生日快乐</p><p>为什么我的自制力一点都不强，今日沉迷魔法少女伊莉雅，看完了所有动画和漫画，我的集中力为什么在这种地方体现的这么强烈，虽然莫伊的世界确实非常的丰富且充实了我对于fate世界观的认识，这个魔法世界实在太庞大太大了，我以前怎么没有意识到？这丝毫不比东方差多少，虽然我在东方的认识上比之现今的许多人都不及，惭愧。</p><p>好想放伊莉雅、小黑、美游的图啊啊啊啊啊，明天一定要搞定steam图床和本地图片路径</p><p>没什么了，接着把英语听力和数学刷完吧，没多少时间了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/blog/2020/02/17/my-first-blog/"/>
      <url>/blog/2020/02/17/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>这是我的第一个发的博客文章，这里不会设置百度或者谷歌索引，<a id="more"></a>所以会不会只有我自己一个人看呢？第一天属于测试性质，还有很多东西没有弄好，得去复习考研数学了，今天的电脑时间要结束了呢，这东西居然耗了我这么长时间，明明我之前弄过很多次hexo，，虽然都是半吊子，，终于，我要弄属于我自己的hexo了，感到，，</p><p>没什么好说的了，接下来一边更新于fpga有关的学习过程，一边完善这个blog</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2020/02/17/hello-world/"/>
      <url>/blog/2020/02/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
