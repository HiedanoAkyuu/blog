<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hieda no akyuu</title>
  
  <subtitle>a negligible person in the world</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://hiedanoakyuu.github.io/blog/"/>
  <updated>2020-03-19T15:35:31.003Z</updated>
  <id>https://hiedanoakyuu.github.io/blog/</id>
  
  <author>
    <name>hiedanoakyuu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>明治十七年の上海アリス</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/19/%E6%98%8E%E6%B2%BB%E5%8D%81%E4%B8%83%E5%B9%B4%E3%81%AE%E4%B8%8A%E6%B5%B7%E3%82%A2%E3%83%AA%E3%82%B9/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/19/%E6%98%8E%E6%B2%BB%E5%8D%81%E4%B8%83%E5%B9%B4%E3%81%AE%E4%B8%8A%E6%B5%B7%E3%82%A2%E3%83%AA%E3%82%B9/</id>
    <published>2020-03-19T15:20:16.000Z</published>
    <updated>2020-03-19T15:35:31.003Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡三面BOSS红美铃 明治十七年的上海爱丽丝</p><a id="more"></a><h3 id="wiki介绍"><a href="#wiki介绍" class="headerlink" title="wiki介绍"></a>wiki介绍</h3><p>红美铃的主题曲。<br>欧罗巴的味道和游戏音乐的味道混合了。（2:8左右）<br>不是中华也不是其他什么因为那个。是因为要上海法租界的印象。</p><p>不过，美铃也好像不是人类，是什么东西呢（喂</p><h3 id="里音乐评论"><a href="#里音乐评论" class="headerlink" title="里音乐评论"></a>里音乐评论</h3><p>这时的上海是怎样的呢？<br>明治十七年是清法战争的那年。<br>有着外国租界的上海、没有比它更适合「魔都」这个名字的城市了。<br>另外，所谓「魔都」不是「魔界都市 - 新宿 -」的缩写</p><p><img src="https://i.loli.net/2020/03/19/NaMutOi4Ec6ZPKF.jpg" alt="1.jpg" title="红师傅看门图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡三面BOSS红美铃 明治十七年的上海爱丽丝&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/tags/touhou/"/>
    
  </entry>
  
  <entry>
    <title>上海紅茶館　～ Chinese Tea</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/15/%E4%B8%8A%E6%B5%B7%E7%B4%85%E8%8C%B6%E9%A4%A8-%EF%BD%9E-Chinese-Tea/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/15/%E4%B8%8A%E6%B5%B7%E7%B4%85%E8%8C%B6%E9%A4%A8-%EF%BD%9E-Chinese-Tea/</id>
    <published>2020-03-15T15:25:06.000Z</published>
    <updated>2020-03-18T13:40:18.217Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡三面道中主题曲 上海红茶馆　～ Chinese Tea</p><a id="more"></a><p>本曲选择的是专辑《夢違科学世紀 ～ Changeability of Strange Dream》中的上海红茶馆<br><img src="https://i.loli.net/2020/03/15/qNHCS1yfc3Yz5Pn.png" alt="1.png" title="专辑封面"></p><p>音乐评论：在一片深绿色的那头，有一座鲜红色的房子。 房子的周围环绕着的是深绿色和……闪着银白光辉的湖…… 多么美妙的景观啊 虽然如此的鲜红，不知为何却与自然溶为一体。 四周到处是这样的色彩，给人一种孩子般的感觉……我非常喜欢。</p><p>wiki介绍：<br>３面的主题曲。<br>虽然是打算作成中华风的，结果好像不是这样(^^;<br>不过曲是东洋风的。第四关以后好像做不了东洋风了，就在这里作了<br>(^^;<br>说是Fusion，不如说是New Age风吧？</p><p>里音乐介绍：<br>本来是打算弄成中国风味的曲子、结果弄的并不是很像（汗）<br>最近都没怎么喝红茶呢。血之红茶真是罪孽深重呢。<br>不过，蕾米莉亚她们喝的红茶其实只是人的血，真的可以称之为茶吗？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡三面道中主题曲 上海红茶馆　～ Chinese Tea&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/tags/touhou/"/>
    
  </entry>
  
  <entry>
    <title>おてんば恋娘</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/12/%E3%81%8A%E3%81%A6%E3%82%93%E3%81%B0%E6%81%8B%E5%A8%98/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/12/%E3%81%8A%E3%81%A6%E3%82%93%E3%81%B0%E6%81%8B%E5%A8%98/</id>
    <published>2020-03-12T13:01:05.000Z</published>
    <updated>2020-03-12T13:04:55.625Z</updated>
    
    <content type="html"><![CDATA[<p>笨蛋⑨主题曲啦,活泼的纯情小姑娘</p><a id="more"></a><p>没想到这充满智慧与力量的旋律也可以演绎的这么温柔动人<br><br><br>⑨月⑨日忆BAKA琪露诺</p><p>wiki评论:<br>琪露诺的主题曲。<br>果然，作成了有些笨的少女的印象。<br>也因为这样变成了不知道是明快还是阴暗的曲子也没什么关系。<br>高速宁静的主旋律之类的。<br>算了，反正是第二关（哦</p><p>里音乐评论:<br>因为想作听起来给人笨笨的感觉的曲子，所以首先曲子名就很笨。<br>字读起来和文字看起来都很笨。<br>在钢琴旋律中混合着异国情调的感觉。<br>个人认为是很萌的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笨蛋⑨主题曲啦,活泼的纯情小姑娘&lt;/p&gt;
    
    </summary>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/categories/touhou/"/>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>fate stay night</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/11/fate-stay-night/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/11/fate-stay-night/</id>
    <published>2020-03-11T15:55:30.000Z</published>
    <updated>2020-03-11T15:58:39.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="音乐介绍"><a href="#音乐介绍" class="headerlink" title="音乐介绍"></a>音乐介绍</h2><p>命运开始之曲，同时也是BE38最悲壮之曲，也是UBW动画最终结局之曲。这首曲子真的承载了太多了…..<br>今天看完了全部的fate stay night游戏，感慨良多，这么庞大且凄美的世界，并不比东方差多少。<br>那是，如闪电一般的枪尖 为了穿刺心脏而射出的枪的尖端 试着躲避也是无意义的吧 既然那是闪电，就不是人的眼睛能捕捉的 但是 要贯穿这身体的闪电被要救这身体的银芒所弹开了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;音乐介绍&quot;&gt;&lt;a href=&quot;#音乐介绍&quot; class=&quot;headerlink&quot; title=&quot;音乐介绍&quot;&gt;&lt;/a&gt;音乐介绍&lt;/h2&gt;&lt;p&gt;命运开始之曲，同时也是BE38最悲壮之曲，也是UBW动画最终结局之曲。这首曲子真的承载了太多了…..&lt;br&gt;今天看完了全部的
      
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="fate" scheme="https://hiedanoakyuu.github.io/blog/tags/fate/"/>
    
  </entry>
  
  <entry>
    <title>Lunate Elf(半月的妖精)</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/09/Lunate-Elf-%E5%8D%8A%E6%9C%88%E7%9A%84%E5%A6%96%E7%B2%BE/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/09/Lunate-Elf-%E5%8D%8A%E6%9C%88%E7%9A%84%E5%A6%96%E7%B2%BE/</id>
    <published>2020-03-09T04:36:15.000Z</published>
    <updated>2020-03-11T15:55:34.558Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡二面曲子</p><a id="more"></a><h2 id="音乐介绍"><a href="#音乐介绍" class="headerlink" title="音乐介绍"></a>音乐介绍</h2><h2 id="今日"><a href="#今日" class="headerlink" title="今日"></a>今日</h2><h3 id="关于git-push的事"><a href="#关于git-push的事" class="headerlink" title="关于git push的事"></a>关于git push的事</h3><p>原文链接：<a href="https://blog.csdn.net/sinat_24503691/article/details/90666090" target="_blank" rel="noopener">https://blog.csdn.net/sinat_24503691/article/details/90666090</a><br>近期上传总是失败，显示不允许另一个账号上传，，经查阅发现是我原来的账号没用删除<br>下面展示操作过程</p><hr><br>1.打开[凭据管理器]；<br><img src="/blog/2020/03/09/Lunate-Elf-%E5%8D%8A%E6%9C%88%E7%9A%84%E5%A6%96%E7%B2%BE/1.png" class title="凭据管理器"><br>2.选择windows凭据；<img src="/blog/2020/03/09/Lunate-Elf-%E5%8D%8A%E6%9C%88%E7%9A%84%E5%A6%96%E7%B2%BE/2.png" class title="选择windows凭据"><br>3.然后找到其中相关git账号的凭据，我的是在普通凭据下面，如图：<img src="/blog/2020/03/09/Lunate-Elf-%E5%8D%8A%E6%9C%88%E7%9A%84%E5%A6%96%E7%B2%BE/2.png" class><br>以上操作结束之后尝试Git的Push或Pull操作，会要求你输入Git的账号和密码，然后再试就可以操作成功了；]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡二面曲子&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/tags/touhou/"/>
    
  </entry>
  
  <entry>
    <title>妖魔夜行</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/08/%E5%A6%96%E9%AD%94%E5%A4%9C%E8%A1%8C/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/08/%E5%A6%96%E9%AD%94%E5%A4%9C%E8%A1%8C/</id>
    <published>2020-03-08T13:56:25.000Z</published>
    <updated>2020-03-15T15:25:48.119Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡一面boss露米娅主题曲</p><a id="more"></a><h2 id="音乐介绍"><a href="#音乐介绍" class="headerlink" title="音乐介绍"></a>音乐介绍</h2><p>thwiki评论：<br>露米娅的主题曲。<br>不仅是这首音乐，这次，总体来说音乐变得轻快了。<br>这音乐是表现夜晚里妖怪的印象，<br>　　···这样说也可以吧(^^;<br>节奏上有些像笨蛋的感觉。<br>但其实露米娅一点也不笨呢，幼灵梦泪目。</p><p>里音乐评论：<br>写上“ヨーマヤコー”（youmayakou）后，看起来很有不丹人的感觉。<br>游戏中这里没有激烈的战斗，所以给人以比较清爽的感觉<br>妖魔以外的“魔”就不妖异了吗？</p><img src="/blog/2020/03/08/%E5%A6%96%E9%AD%94%E5%A4%9C%E8%A1%8C/1.png" class title="露米娅和小夜雀"><p>露米娅和小夜雀</p><p>小夜雀看起来好像挺危险的呢</p><h2 id="今日"><a href="#今日" class="headerlink" title="今日"></a>今日</h2><p>烦，版本还是没弄好，还是无法更新，到底是怎么回事？？？？git pull 是个什么东西？？fork更新是个什么东西？？？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡一面boss露米娅主题曲&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/tags/touhou/"/>
    
  </entry>
  
  <entry>
    <title>如鬼灯般的红色之魂</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/06/%E5%A6%82%E9%AC%BC%E7%81%AF%E8%88%AC%E7%9A%84%E7%BA%A2%E8%89%B2%E4%B9%8B%E9%AD%82/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/06/%E5%A6%82%E9%AC%BC%E7%81%AF%E8%88%AC%E7%9A%84%E7%BA%A2%E8%89%B2%E4%B9%8B%E9%AD%82/</id>
    <published>2020-03-06T12:29:29.000Z</published>
    <updated>2020-03-06T12:34:36.953Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡一面道中主题曲</p><a id="more"></a><h2 id="音乐介绍"><a href="#音乐介绍" class="headerlink" title="音乐介绍"></a>音乐介绍</h2><p>依然是选择TAMUSIC大叔的曲子</p><p>想要突出夜晚里森林的印象。反正是第一关，觉得加些勇气感就能<br>让人有干劲了吧，做成稍微活泼一点的音乐了。<br>说成勇气感还不如说是有趣的百鬼夜行的感觉吧？</p><h2 id="今日感想"><a href="#今日感想" class="headerlink" title="今日感想"></a>今日感想</h2><p>fpga又搁置了一天，但是今天正式完成所有数学暑假作业，但是还不够，马达马大，先这么多吧，没什么时间写了。弄好了音乐插件还是很开心的，原来是把id弄错了，歌曲id弄成了我的user id，，，，汗</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡一面道中主题曲&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>比赤色更红的梦</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/05/%E6%AF%94%E8%B5%A4%E8%89%B2%E6%9B%B4%E7%BA%A2%E7%9A%84%E6%A2%A6/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/05/%E6%AF%94%E8%B5%A4%E8%89%B2%E6%9B%B4%E7%BA%A2%E7%9A%84%E6%A2%A6/</id>
    <published>2020-03-05T03:29:22.000Z</published>
    <updated>2020-03-06T12:27:56.294Z</updated>
    
    <content type="html"><![CDATA[<p>东方红魔乡TH6标题画面的主题曲。</p><a id="more"></a><h2 id="音乐介绍"><a href="#音乐介绍" class="headerlink" title="音乐介绍"></a>音乐介绍</h2><p>TAMUSIC大叔的曲子，哎呀，真是温馨呢<br>wiki介绍：<br>既然是东方，试一下做成和风的。呀，真是的。<br>游戏好像不是和风的说(^^;<br>不像是ＳＴＧ的曲子。<br>说起来，标题画面需要曲子吗（笑）？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;东方红魔乡TH6标题画面的主题曲。&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
      <category term="touhou" scheme="https://hiedanoakyuu.github.io/blog/tags/touhou/"/>
    
  </entry>
  
  <entry>
    <title>new type</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/03/04/new-type/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/03/04/new-type/</id>
    <published>2020-03-04T15:33:38.000Z</published>
    <updated>2020-03-04T15:49:46.141Z</updated>
    
    <content type="html"><![CDATA[<p>关于某些计划</p><a id="more"></a><p>考研计划<br>网站完善计划<br>东方角色曲文章专属计划<br>fpga补完计划<br>matlab复盘计划<br>stm32复盘计划<br>机器学习复盘计划</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于某些计划&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>verilog基础模块</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/27/verilog%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/27/verilog%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97/</id>
    <published>2020-02-27T03:00:53.000Z</published>
    <updated>2020-03-18T13:40:04.040Z</updated>
    
    <content type="html"><![CDATA[<p>主要介绍verilog的基础模块</p><a id="more"></a><h2 id="fpga"><a href="#fpga" class="headerlink" title="fpga"></a>fpga</h2><h3 id="forever"><a href="#forever" class="headerlink" title="forever"></a>forever</h3><p>forever循环语句常用于产生周期性的波形，用来作为仿真测试信号。它与always语句不同之处在于不能独立写在程序中，而必须写在initial块中。</p><h3 id="parameter"><a href="#parameter" class="headerlink" title="parameter"></a>parameter</h3><p>在Verilog中我们常常会遇到要将一个常量（算法中的某个参数）赋给很多个变量的情况，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x &#x3D; 10;</span><br><span class="line">y &#x3D; 10;</span><br><span class="line">z &#x3D; 10;</span><br></pre></td></tr></table></figure><p>如果此时10要改为9，就需要在代码中修改3个地方，非常的不方便，并且这个10是没有任何意义的，我们不知道它代表什么，所以为了代码的易重用、易读性，我们应使常量参数化，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parameter   MAX &#x3D; 10;</span><br><span class="line">x &#x3D; MAX;</span><br><span class="line">y &#x3D; MAX;</span><br><span class="line">z &#x3D; MAX;</span><br></pre></td></tr></table></figure><p>这样就只需要修改MAX就可以了，并且MAX是有意义的，增加代码的易读性。<br>parameter是常量，不是变量，所以不允许在运行时修改它的值，即不能在组合逻辑或者时序逻辑中对其进行赋值。</p><h3 id="与门"><a href="#与门" class="headerlink" title="与门"></a>与门</h3><p>在 verilog 中以“&amp;”表示按位与，如 c=a&amp;b，真值表如下，在 a 和 b 都等于 1 时结果才为 1<br><img src="https://i.loli.net/2020/03/12/aRcfI9dWCiAUHSn.png" alt="1.png" title="RTL表示的与门"><br>真值表如下<br><img src="https://i.loli.net/2020/03/12/Y7nIjcvLGmFtAHM.png" alt="2.png"></p><p>代码实现如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module top(a, b, c);  </span><br><span class="line">input  a ;  </span><br><span class="line">input  b ;  </span><br><span class="line">output c ;    </span><br><span class="line"></span><br><span class="line">assign c &#x3D; a &amp; b ;  </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>激励文件如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1 ns&#x2F;1 ns  module top_tb() ;  </span><br><span class="line">reg a ;  </span><br><span class="line">reg b ;  </span><br><span class="line">wire c ;    </span><br><span class="line"></span><br><span class="line">initial  </span><br><span class="line">begin    </span><br><span class="line">    a &#x3D; 0 ;    </span><br><span class="line">    b &#x3D; 0 ;    </span><br><span class="line">    forever    &#x2F;&#x2F;forever循环语句常用于产生周期性的波形，</span><br><span class="line">    &#x2F;&#x2F;用来作为仿真测试信号。它与always语句不同之处在于不能独立写在程序中，</span><br><span class="line">    &#x2F;&#x2F;而必须写在initial块中。</span><br><span class="line">    begin          </span><br><span class="line">        #(&#123;$random&#125;%100)      </span><br><span class="line">        a &#x3D; ~a ;      </span><br><span class="line">        #(&#123;$random&#125;%100)       </span><br><span class="line">        b &#x3D; ~b ;     </span><br><span class="line">    end  </span><br><span class="line">end    </span><br><span class="line"></span><br><span class="line">top  t0(.a(a), .b(b),.c(c)) ;    </span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>仿真图<br><img src="https://i.loli.net/2020/03/12/1R5oQzHDL4uOeIE.png" alt="3.png" title="与门仿真图"></p><h3 id="或门"><a href="#或门" class="headerlink" title="或门"></a>或门</h3><p>在 verilog 中以“|”表示按位或，如 c = a|b , 真值表如下，在 a 和 b 都为 0 时结果才为 0。</p><p>真值表<br><img src="https://i.loli.net/2020/03/12/qtSnaICKDAp6EF1.png" alt="4.png" title="真值表"></p><p>或门<br><img src="https://i.loli.net/2020/03/12/bNOJYdpHVTF1gmG.png" alt="5.png" title="RTL表示的或门"></p><p>代码实现如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module top(a, b, c) ;</span><br><span class="line">input a ;</span><br><span class="line">input b ;</span><br><span class="line">output c ;</span><br><span class="line"></span><br><span class="line">assign c &#x3D; a | b ;</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>激励文件如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1 ns&#x2F;1 ns</span><br><span class="line">module top_tb() ;</span><br><span class="line">reg a ;</span><br><span class="line">reg b ;</span><br><span class="line">wire c ;</span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">    a &#x3D; 0 ;</span><br><span class="line">    b &#x3D; 0 ;</span><br><span class="line">    forever</span><br><span class="line">    begin</span><br><span class="line">        #(&#123;$random&#125;%100)</span><br><span class="line">        a &#x3D; ~a ;</span><br><span class="line">        #(&#123;$random&#125;%100)</span><br><span class="line">        b &#x3D; ~b ;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">top t0(.a(a), .b(b),.c(c)) ;</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>仿真结果如下<br><img src="https://i.loli.net/2020/03/12/yHYLr15bdsOn4Ql.png" alt="6.png" title="仿真结果"></p><h3 id="非门"><a href="#非门" class="headerlink" title="非门"></a>非门</h3><p>在 verilog 中以“<del>”表示按位取反，如 b=</del>a，真值表如下，b 等于 a 的相反数。</p><p>真值表<br><img src="https://i.loli.net/2020/03/12/n7JjgGHAdYUEW4N.png" alt="7.png" title="真值表"></p><p>RTL表示的非门<br><img src="https://i.loli.net/2020/03/12/LhYekSpdFtxyZb3.png" alt="8.png" title="RTL表示的非门"></p><p>仿真结果<br><img src="https://i.loli.net/2020/03/12/bANfmlJLjhT4qdH.png" alt="9.png" title="仿真结果"></p><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module top(a, b) ;</span><br><span class="line">input a ;</span><br><span class="line">output b ;</span><br><span class="line">assign b &#x3D; ~a ;</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>激励文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1 ns&#x2F;1 ns</span><br><span class="line">module top_tb() ;</span><br><span class="line">reg a ;</span><br><span class="line">wire b ;</span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">    a &#x3D; 0 ;</span><br><span class="line">    forever</span><br><span class="line">    begin</span><br><span class="line">        #(&#123;$random&#125;%100)</span><br><span class="line">        a &#x3D; ~a ;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">top t0(.a(a), .b(b)) ;</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p>在 verilog 中以“^”表示异或，如 c= a^b ，真值表如下，当 a 和 b 相同时，输出为 0。</p><p>真值表<br><img src="https://i.loli.net/2020/03/12/M1fGIvXW6Ok9yb5.png" alt="10.png" title="真值表"></p><p>RTL表示的异或门<br><img src="https://i.loli.net/2020/03/12/UtVIJjB8OhnR7pC.png" alt="11.png" title="RTL表示的异或门"></p><p>代码实现如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module top(a, b, c) ;</span><br><span class="line">input a ;</span><br><span class="line">input b ;</span><br><span class="line">output c ;</span><br><span class="line"></span><br><span class="line">assign c &#x3D; a ^ b ;</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>激励文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1 ns&#x2F;1 ns</span><br><span class="line">module top_tb() ;</span><br><span class="line">reg a ;</span><br><span class="line">reg b ;</span><br><span class="line">wire c ;</span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">    a &#x3D; 0 ;</span><br><span class="line">    b &#x3D; 0 ;</span><br><span class="line">    forever</span><br><span class="line">    begin</span><br><span class="line">        #(&#123;$random&#125;%100)</span><br><span class="line">        a &#x3D; ~a ;</span><br><span class="line">        #(&#123;$random&#125;%100)</span><br><span class="line">        b &#x3D; ~b ;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">top t0(.a(a), .b(b),.c(c)) ;</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>仿真结果如下:<br><img src="https://i.loli.net/2020/03/12/K27pvUMXazf39t8.png" alt="12.png" title="仿真结果"></p><h3 id="比较器"><a href="#比较器" class="headerlink" title="比较器"></a>比较器</h3><p>在 verilog 中以大于“&gt;”，等于”==”，小于”&lt;”，大于等于”&gt;=”，小于等于”&lt;=”，不等于”!=”表 示，以大于举例，如 c= a &gt; b ;表示如果 a 大于 b，那么 c 的值就为 1，否则为 0。真值表如下： </p><p><img src="https://i.loli.net/2020/03/18/mEKDNkvQy3WXeHV.png" alt="13.png" title="此处为c=a&gt;b的比较器真值表"></p><p><img src="https://i.loli.net/2020/03/18/87LacUJ4srmCF3i.png" alt="14.png" title="RTL表示的比较器"></p><p>(没搞懂，，这里的1’h0 cin什么意思)</p><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module top(a, b, c) ;  </span><br><span class="line">input  a ;  </span><br><span class="line">input  b ;  </span><br><span class="line">output c ;   </span><br><span class="line"></span><br><span class="line">assign c &#x3D; a &gt; b ;  </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>激励文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns&#x2F;1ns</span><br><span class="line">module top_tb() ; </span><br><span class="line">reg a ;  </span><br><span class="line">reg b ;  </span><br><span class="line">wire c ;    </span><br><span class="line"></span><br><span class="line">initial  </span><br><span class="line">begin  </span><br><span class="line">    a &#x3D; 0;</span><br><span class="line">    b &#x3D; 0;</span><br><span class="line">    forever</span><br><span class="line">    begin</span><br><span class="line">        #(&#123;$random&#125;%100) &#x2F;&#x2F;采用位拼接符，在 0 到 100 之间产生随机数 </span><br><span class="line">        a &#x3D; ~a ;</span><br><span class="line">        #(&#123;$random&#125;%100</span><br><span class="line">        b &#x3D; ~b ; </span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">top  t0(.a(a), .b(b),.c(c)) ; </span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍verilog的基础模块&lt;/p&gt;
    
    </summary>
    
    
      <category term="projects" scheme="https://hiedanoakyuu.github.io/blog/categories/projects/"/>
    
    
      <category term="verilog" scheme="https://hiedanoakyuu.github.io/blog/tags/verilog/"/>
    
  </entry>
  
  <entry>
    <title>verilog仿真</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/</id>
    <published>2020-02-25T11:28:36.000Z</published>
    <updated>2020-03-05T02:52:31.877Z</updated>
    
    <content type="html"><![CDATA[<p>关于昨天提到的仿真全过程分析以及总结</p><a id="more"></a><p>看视频忒复杂了，果然我连仿真都还不会直接上实体有个屁用<br>下面我们开始吧</p><hr><p>modelsim需要两个文件，就拿最简单的程序led流水灯举例，有led_test.v和led_test_tb.v，其中tb那个好像叫做testbench，要想仿真需要将这两个文件都添加到modelsim的工程中。</p><h2 id="激励文件-tb-v的写法"><a href="#激励文件-tb-v的写法" class="headerlink" title="激励文件 .tb.v的写法"></a>激励文件 .tb.v的写法</h2><p>testbench是一种激励文件，由于软件不知道我们的时钟信号，因此需要我们自己设计，自己写，用于模拟现实中的时钟信号。</p><h3 id="简单的led实验的激励文件和程序文件的写法"><a href="#简单的led实验的激励文件和程序文件的写法" class="headerlink" title="简单的led实验的激励文件和程序文件的写法"></a>简单的led实验的激励文件和程序文件的写法</h3><h4 id="激励文件"><a href="#激励文件" class="headerlink" title="激励文件"></a>激励文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns&#x2F;1ns  &#x2F;&#x2F;时间单位&#x2F;时间精度</span><br><span class="line">module led_test_tb;  &#x2F;&#x2F;定义激励文件名称</span><br><span class="line">reg clk;            </span><br><span class="line">reg rst_n;</span><br><span class="line">wire[3:0] led;</span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">clk &#x3D; 1&#39;b0;</span><br><span class="line">rst_n &#x3D; 1&#39;b0;</span><br><span class="line">#100 rst_n &#x3D; 1&#39;b1;&#x2F;&#x2F;&quot;#100&quot;是延时100单位的意思，这里就是rst_n信号延时</span><br><span class="line">    &#x2F;&#x2F;100ns后变1</span><br><span class="line">end</span><br><span class="line">always#10 clk &#x3D; ~clk;&#x2F;&#x2F;50Mhz  &#x2F;&#x2F;每过10ns产生一次时钟信号跳变</span><br><span class="line">led_test dut</span><br><span class="line">(</span><br><span class="line">.clk           (clk),&#x2F;&#x2F; 开发板上输入时钟: 50Mhz</span><br><span class="line">.rst_n         (rst_n),&#x2F;&#x2F; 开发板上输入复位按键</span><br><span class="line">.led           (led)&#x2F;&#x2F; 输出LED灯,用于控制开发板上四个LED(LED0~LED3)</span><br><span class="line">);</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>仿真后的结果波形如下</p><img src="/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/1.png" class title="波形图">  <p>可以看到，在100ns时rst_n如程序所写上升了，这个程序主要用于产生时钟信号，用于下面的主程序代码</p><h4 id="程序文件-v的代码"><a href="#程序文件-v的代码" class="headerlink" title="程序文件 .v的代码"></a>程序文件 .v的代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns &#x2F; 1ps</span><br><span class="line">module led_test</span><br><span class="line">(</span><br><span class="line">input           clk,           &#x2F;&#x2F; system clock 50Mhz on board</span><br><span class="line">input           rst_n,         &#x2F;&#x2F; reset ,low active</span><br><span class="line">output reg[3:0] led            &#x2F;&#x2F; LED,use for control the LED signal on board</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;define the time counter</span><br><span class="line">reg [31:0]      timer;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; cycle counter:from 0 to 4 sec</span><br><span class="line">always@(posedge clk or negedge rst_n)</span><br><span class="line">begin</span><br><span class="line">if (rst_n &#x3D;&#x3D; 1&#39;b0)</span><br><span class="line">timer &lt;&#x3D; 32&#39;d0;                     &#x2F;&#x2F;when the reset signal valid,time counter clearing</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d199_999_999)      &#x2F;&#x2F;4 seconds count(50M*4-1&#x3D;199999999)</span><br><span class="line">timer &lt;&#x3D; 32&#39;d0;                     &#x2F;&#x2F;count done,clearing the time counter</span><br><span class="line">else</span><br><span class="line">timer &lt;&#x3D; timer + 32&#39;d1;             &#x2F;&#x2F;timer counter &#x3D; timer counter + 1</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; LED control</span><br><span class="line">always@(posedge clk or negedge rst_n)</span><br><span class="line">begin</span><br><span class="line">if (rst_n &#x3D;&#x3D; 1&#39;b0)</span><br><span class="line">led &lt;&#x3D; 4&#39;b0000;                     &#x2F;&#x2F;when the reset signal active</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d49_999_999)       &#x2F;&#x2F;time counter count to 1st sec,LED1 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0001;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d99_999_999)       &#x2F;&#x2F;time counter count to 2nd sec,LED2 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0010;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d149_999_999)      &#x2F;&#x2F;time counter count to 3rd sec,LED3 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b0100;</span><br><span class="line">else if (timer &#x3D;&#x3D; 32&#39;d199_999_999)      &#x2F;&#x2F;time counter count to 4th sec,LED4 lighten</span><br><span class="line">led &lt;&#x3D; 4&#39;b1000;</span><br><span class="line">end</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>下面是该工程的总体仿真，可以看出在时钟上升沿处，计数器加一，正常运行</p><img src="/blog/2020/02/25/verilog%E4%BB%BF%E7%9C%9F/2.png" class title="波形图2">  <h2 id="testbench中的常用写法"><a href="#testbench中的常用写法" class="headerlink" title="testbench中的常用写法"></a>testbench中的常用写法</h2><p>下述所有指令必须在initial内写，不能在此之外的地方或者always里面。然后initial在程序中是由上到下，并行执行的。也就是说两个initial，是先执行上面的第一条然后再执行下面的第一条，然后再执行上面的第二条</p><h3 id="display-可自动换行"><a href="#display-可自动换行" class="headerlink" title="display(可自动换行)"></a>display(可自动换行)</h3><p>‘’’<br>$display(“hello alinx”);<br>$display(“rst_n=%b”, rst_n);<br>‘’’</p><h3 id="write-无法自动换行"><a href="#write-无法自动换行" class="headerlink" title="write (无法自动换行)"></a>write (无法自动换行)</h3><p>与display差不多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$write(&quot;hello alinx\n&quot;);&#x2F;&#x2F;这样才可以换行</span><br><span class="line">$write(&quot;rst_n&#x3D;%b&quot;, rst_n);</span><br></pre></td></tr></table></figure><h3 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h3><p>用于持续监测指定变量，只要变量发生变化，即会触发$monitor，显示对应语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$monitor(&quot;clk &#x3D; %b&quot;, clk);</span><br></pre></td></tr></table></figure><h3 id="strobe"><a href="#strobe" class="headerlink" title="strobe"></a>strobe</h3><p>任务与display相同，用法也相同。但是是在所有变量都有值后才打印出来而display仿真器一看到这个命令，不管要显示的变量是否有值，都会显示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$strobe(&quot;rst_n&#x3D;%b&quot;, rst_n);</span><br></pre></td></tr></table></figure><h3 id="stop"><a href="#stop" class="headerlink" title="stop"></a>stop</h3><p>stop是暂停仿真，下一步由仿真者决定</p><h3 id="finish"><a href="#finish" class="headerlink" title="finish"></a>finish</h3><p>执行到finish直接停止仿真，关闭软件</p><h3 id="模拟时间函数"><a href="#模拟时间函数" class="headerlink" title="模拟时间函数"></a>模拟时间函数</h3><p>可以打印运行了多长时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$time         返回一个 64 位整数时间值 </span><br><span class="line">$stime       返回一个 32 位整数时间值 </span><br><span class="line">$realtime  返回一个实数时间值</span><br></pre></td></tr></table></figure><p>$monitor(“time is %d\tclk= %b”, $time, clk) ; </p><h3 id="random"><a href="#random" class="headerlink" title="random"></a>random</h3><p>(1) $random 和$random()意义一样，都 是产生随机数<br>(2) $random%100  在-99 到 99 之间产生随机数<br>(3) {$random}%100  采用位拼接符，在 0 到 100 之间产生随机数<br>(4) 如 seed =10, $random(seed) 根据 seed 值产生随机数，而后 seed 值也会更</p><p>代码示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#96;timescale 1ns&#x2F;1ns</span><br><span class="line">module led_test_tb;</span><br><span class="line"></span><br><span class="line">reg clk;</span><br><span class="line">reg[6:0]  a, b, c, d;</span><br><span class="line"></span><br><span class="line">initial</span><br><span class="line">begin</span><br><span class="line">  $display(&quot;hello alinx&quot;);</span><br><span class="line">clk &#x3D; 1&#39;b0;</span><br><span class="line">$display(&quot;clk &#x3D; %b&quot;, clk);</span><br><span class="line">$stop;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">always#10 clk &#x3D; ~clk;&#x2F;&#x2F;50Mhz</span><br><span class="line"></span><br><span class="line">always@(posedge clk)</span><br><span class="line">begin </span><br><span class="line">  b &#x3D; $random%100;</span><br><span class="line">  $display(&quot;wdnmd %d&quot;, b);</span><br><span class="line">  $stop;</span><br><span class="line">end</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h3 id="readmemb"><a href="#readmemb" class="headerlink" title="$readmemb"></a>$readmemb</h3><p>格式如下<br>$readmemb(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;);<br>$readmemb(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;,&lt;起始地址&gt;);<br>$readmemb(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;,&lt;起始地址&gt;,&lt;结束地址&gt;);<br>$readmemh(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;);<br>$readmemh(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;,&lt;起始地址&gt;);<br>$readmemh(“&lt;数据文件名&gt;”,&lt;存贮器名&gt;,&lt;起始地址&gt;,&lt;结束地址&gt;); </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于昨天提到的仿真全过程分析以及总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="projects" scheme="https://hiedanoakyuu.github.io/blog/categories/projects/"/>
    
    
      <category term="verilog" scheme="https://hiedanoakyuu.github.io/blog/tags/verilog/"/>
    
  </entry>
  
  <entry>
    <title>屁屁枪忒骚了</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/24/%E5%B1%81%E5%B1%81%E6%9E%AA%E5%BF%92%E9%AA%9A%E4%BA%86/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/24/%E5%B1%81%E5%B1%81%E6%9E%AA%E5%BF%92%E9%AA%9A%E4%BA%86/</id>
    <published>2020-02-24T15:36:16.000Z</published>
    <updated>2020-03-05T02:52:43.747Z</updated>
    
    <content type="html"><![CDATA[<p>wdnm<br>仿真忒骚了，今天太晚了，明天把led和移位寄存器仿真及波形解读补上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;wdnm&lt;br&gt;仿真忒骚了，今天太晚了，明天把led和移位寄存器仿真及波形解读补上。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>我抽到伊莉雅一家人了！！</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/</id>
    <published>2020-02-23T15:00:29.000Z</published>
    <updated>2020-03-05T02:52:56.962Z</updated>
    
    <content type="html"><![CDATA[<p>没什么好说的了，明天正式开课，今天把主题换成了volantis</p><a id="more"></a><p>git bash设置代理的方法，不设置代理f出去下载不走那条线，，，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &quot;http:&#x2F;&#x2F;127.0.0.1:1080&quot;</span><br><span class="line">git config --global https.proxy &quot;https:&#x2F;&#x2F;127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>后面改成自己电脑的代理端口即可</p><img src="/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/A.jpg" class title="A"><p>大佬入门时看的书</p><img src="/blog/2020/02/23/%E6%88%91%E6%8A%BD%E5%88%B0%E4%BC%8A%E8%8E%89%E9%9B%85%E4%B8%80%E5%AE%B6%E4%BA%BA%E4%BA%86%EF%BC%81%EF%BC%81/B.png" class title="B">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没什么好说的了，明天正式开课，今天把主题换成了volantis&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>伊莉雅卡哇伊</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/21/%E4%BC%8A%E8%8E%89%E9%9B%85%E5%8D%A1%E5%93%87%E4%BC%8A/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/21/%E4%BC%8A%E8%8E%89%E9%9B%85%E5%8D%A1%E5%93%87%E4%BC%8A/</id>
    <published>2020-02-21T12:35:35.000Z</published>
    <updated>2020-03-05T02:53:52.822Z</updated>
    
    <content type="html"><![CDATA[<p>今天六级出成绩，，454，，不高的分数，但是和预估相比能看出些东西。</p><a id="more"></a><p>听力比预估高了三十分，说明听力普遍较差，我的排名还算前，所以我得到了提分</p><p>阅读比预估少了几分，不排除估分错误，但是不像听力那样，说明我的阅读分数没有太多的加权，加权只在低分段有比较大的用处</p><p>就等着明天微电子所出分看那些学长的表现了，23号我将初步认定其中一所学校</p><p>微电子所，微电子学院，西电电院</p><p>不得不说material-x是真的棒，i了i了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天六级出成绩，，454，，不高的分数，但是和预估相比能看出些东西。&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>born</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/20/born/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/20/born/</id>
    <published>2020-02-20T15:43:34.000Z</published>
    <updated>2020-03-05T02:53:46.948Z</updated>
    
    <content type="html"><![CDATA[<p>很难受，今天的deadline没有完成任务，知识点是学完了三节作业的量，但是却只是刚好吸收完，就得开始英语了，虽然我昨天就知道完成是不可能的。下一个deadline是2.23，我得加快fpga的学习进度</p><a id="more"></a><p>今天听了西电研究生复试说明，真的是全程身体发抖，我为什么会这么紧张，又不是我考，最近这次六级也是这样发抖，，，很迷，感觉是因为自己花费了大量的时间，但是却觉得自己还没有准备充足的原因吧，can i say “ready perfectly” in the future before entering the examination room。然后整理的文档在zhuomian内。</p><p>我必须将我所做的所有事情复盘，整理到我的个人网站中，这将对我未来的复试有着重要的作用，同时也会让我回顾这三年来，我到底做了什么。让导师知道我的经历（如果愿意看的话）</p><p>今天就这么多了，明天的数学必须完成一半，不然来不及的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很难受，今天的deadline没有完成任务，知识点是学完了三节作业的量，但是却只是刚好吸收完，就得开始英语了，虽然我昨天就知道完成是不可能的。下一个deadline是2.23，我得加快fpga的学习进度&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>今日依然是伊莉雅日呢</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/</id>
    <published>2020-02-19T10:11:44.000Z</published>
    <updated>2020-03-05T02:53:37.706Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今日吐槽"><a href="#今日吐槽" class="headerlink" title="今日吐槽"></a>今日吐槽</h1><p>emmm，，突然发现搜索功能不正常，看看是怎么回事，，</p><p>在线图床还是不靠谱，直接把图片存在本地算了，</p><p>不行，还是换回material-x吧，，bluelake不得行</p><a id="more"></a><h1 id="本地存图片"><a href="#本地存图片" class="headerlink" title="本地存图片"></a>本地存图片</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>这个插件名字是hexo-asset-image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>但是这个插件需要修改，不然会出bug</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link &#x3D; data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">&#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">   !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">  &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">  $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开_config.yml文件，修改下述内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><h2 id="正确引用姿势"><a href="#正确引用姿势" class="headerlink" title="正确引用姿势"></a>正确引用姿势</h2><p>其中example.jpg是你想引用的文件，放在生成的博客文件夹内，This is an example image是图片注解，鼠标移上去会显示</p><h1 id="今日图片"><a href="#今日图片" class="headerlink" title="今日图片"></a>今日图片</h1><img src="/blog/2020/02/19/%E4%BB%8A%E6%97%A5%E4%BE%9D%E7%84%B6%E6%98%AF%E4%BC%8A%E8%8E%89%E9%9B%85%E6%97%A5%E5%91%A2/xiaohei.jpg" class title="xiaohei">]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今日吐槽&quot;&gt;&lt;a href=&quot;#今日吐槽&quot; class=&quot;headerlink&quot; title=&quot;今日吐槽&quot;&gt;&lt;/a&gt;今日吐槽&lt;/h1&gt;&lt;p&gt;emmm，，突然发现搜索功能不正常，看看是怎么回事，，&lt;/p&gt;
&lt;p&gt;在线图床还是不靠谱，直接把图片存在本地算了，&lt;/p&gt;
&lt;p&gt;不行，还是换回material-x吧，，bluelake不得行&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>克洛伊卡哇伊</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/18/%E5%85%8B%E6%B4%9B%E4%BC%8A%E5%8D%A1%E5%93%87%E4%BC%8A/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/18/%E5%85%8B%E6%B4%9B%E4%BC%8A%E5%8D%A1%E5%93%87%E4%BC%8A/</id>
    <published>2020-02-18T01:33:06.000Z</published>
    <updated>2020-03-05T02:53:18.731Z</updated>
    
    <content type="html"><![CDATA[<p>今天母亲生日呢，我想做鱼香茄子，我可以做到吗？</p><a id="more"></a><p>10点开始了，上午必须把数学的东西做完，然后开始积分的复习</p><p>中午必须把英语刷完</p><p>下午三点去乐购看看能不能买到视频里面提到的东西（先去菜市场）</p><p>so sad </p><p>现在是22.23，没有给母亲做道独特的菜，就说了句生日快乐</p><p>为什么我的自制力一点都不强，今日沉迷魔法少女伊莉雅，看完了所有动画和漫画，我的集中力为什么在这种地方体现的这么强烈，虽然莫伊的世界确实非常的丰富且充实了我对于fate世界观的认识，这个魔法世界实在太庞大太大了，我以前怎么没有意识到？这丝毫不比东方差多少，虽然我在东方的认识上比之现今的许多人都不及，惭愧。</p><p>好想放伊莉雅、小黑、美游的图啊啊啊啊啊，明天一定要搞定steam图床和本地图片路径</p><p>没什么了，接着把英语听力和数学刷完吧，没多少时间了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天母亲生日呢，我想做鱼香茄子，我可以做到吗？&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/17/my-first-blog/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/17/my-first-blog/</id>
    <published>2020-02-17T13:20:32.000Z</published>
    <updated>2020-03-05T02:53:13.327Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第一个发的博客文章，这里不会设置百度或者谷歌索引，<a id="more"></a>所以会不会只有我自己一个人看呢？第一天属于测试性质，还有很多东西没有弄好，得去复习考研数学了，今天的电脑时间要结束了呢，这东西居然耗了我这么长时间，明明我之前弄过很多次hexo，，虽然都是半吊子，，终于，我要弄属于我自己的hexo了，感到，，</p><p>没什么好说的了，接下来一边更新于fpga有关的学习过程，一边完善这个blog</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我的第一个发的博客文章，这里不会设置百度或者谷歌索引，&lt;/p&gt;
    
    </summary>
    
    
      <category term="diary" scheme="https://hiedanoakyuu.github.io/blog/categories/diary/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hiedanoakyuu.github.io/blog/2020/02/17/hello-world/"/>
    <id>https://hiedanoakyuu.github.io/blog/2020/02/17/hello-world/</id>
    <published>2020-02-17T12:19:51.765Z</published>
    <updated>2020-03-05T02:54:07.088Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="begin" scheme="https://hiedanoakyuu.github.io/blog/categories/begin/"/>
    
    
  </entry>
  
</feed>
